openapi: 3.0.1
info:
  title: 'TrackTime API'
  description: 'OpenApi documentation'
  contact:
    name: 'Mikhail Shamanov'
    url: 'https://github.com/mshamanov/'
    email: 'shamanovma@gmail.com'
  version: '1.0'
servers:
  - url: 'http://localhost:8080'
    description: 'Local ENV'
paths:
  /api/v1/tracktime/stats:
    get:
      tags:
        - Methods Execution Time Tracking Controller
      summary: 'Get endpoint to get all the data'
      description: 'Get endpoint to get all the statistics data on methods execution time'
      operationId: getTrackTimeStats
      parameters:
        - name: view
          description: '
            View type of result data:<br>
            **all** - methods data and summary statistics<br>
            **data** - only methods data<br>
            **summary** - only summary statistics<br><br>'
          in: query
          required: false
          schema:
            type: string
            default: 'all'
          examples:
            all:
              value: 'all'
              summary: 'Data and summary'
            data:
              value: 'data'
              summary: 'Only methods data'
            summary:
              value: 'summary'
              summary: 'Only summary'
        - name: short
          description: 'Represent methods data in a short format (method names and execution time only)'
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          $ref: '#/components/responses/OkResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'

    post:
      tags:
        - Methods Execution Time Tracking Controller
      summary: 'Post endpoint to get data via search parameters'
      description: 'Post endpoint to post a request to obtain statistics data on methods execution time via search parameters'
      operationId: searchTrackTimeStats
      parameters:
        - name: view
          description: '
            View type of result data:<br>
            **all** - methods data and summary statistics<br>
            **data** - only methods data<br>
            **summary** - only summary statistics<br><br>'
          in: query
          required: false
          schema:
            type: string
            default: 'all'
          examples:
            all:
              value: 'all'
              summary: 'Data and summary'
            data:
              value: 'data'
              summary: 'Only data'
            summary:
              value: 'summary'
              summary: 'Only summary'
        - name: short
          description: 'Represent methods data in a short format (method names and execution time only)'
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Search Request'
            examples:
              Common:
                value:
                  packageName: 'com.mash.aoptracktime.service'
                  methodName: 'saveAsync'
              Masked:
                value:
                  packageName: 'com.mash.*.*'
                  methodName: '*'
              Combined:
                value:
                  packageName: 'com.mash.aoptracktime.service'
                  methodName: 'save*'
              By date:
                description: 'Date format: dd-MM-yyyy'
                value:
                  createdAt: 01-01-2024
              Between dates:
                description: 'Date format: dd-MM-yyyy'
                value:
                  startDate: 01-01-2024
                  endDate: 05-01-2024
      responses:
        '200':
          $ref: '#/components/responses/OkResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
components:
  schemas:
    Search Request:
      description: 'Search request'
      type: object
      properties:
        groupName:
          type: string
        returnType:
          type: string
        packageName:
          type: string
        className:
          type: string
        methodName:
          type: string
        parameters:
          type: string
        status:
          type: string
          enum:
            - completed
            - exception
        createdAt:
          type: string
          format: date
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
    Full Response:
      description: "Normal data response"
      type: object
      properties:
        result:
          type: array
          items:
            type: object
            properties:
              groupName:
                type: string
              returnType:
                type: string
              packageName:
                type: string
              className:
                type: string
              methodName:
                type: string
              parameters:
                type: string
              executionTime:
                type: integer
                format: int64
              status:
                type: string
                enum:
                  - completed
                  - exception
              createdAt:
                type: string
                format: date-time
        summary:
          type: object
          properties:
            count:
              type: integer
            min:
              type: integer
            max:
              type: integer
            average:
              type: integer
    Short Response:
      description: "Short data response"
      type: object
      properties:
        result:
          type: array
          items:
            type: object
            properties:
              methodName:
                type: string
              executionTime:
                type: integer
                format: int64
                readOnly: true
        summary:
          type: object
          properties:
            count:
              type: integer
            min:
              type: integer
            max:
              type: integer
            average:
              type: integer
    Error Response:
      description: 'Error response'
      type: object
      properties:
        statusCode:
          type: integer
          example: 400
        timestamp:
          type: string
          format: date-time
        message:
          type: string
        description:
          type: string
  responses:
    OkResponse:
      description: 'Response object'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/Full Response'
              - $ref: '#/components/schemas/Short Response'
    ErrorResponse:
      description: 'Error object'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error Response'